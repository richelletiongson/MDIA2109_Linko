import React, { useState } from 'react';
import { useRouter } from 'next/navigation';
import styles from './navigation.module.css';
import Button from '../buttons';

export default function NavigationBar() {
  const [active, setActive] = useState('home');
  const router = useRouter();

  const handleNav = (key, path) => {
    setActive(key);
    router.push(path);
  };

  return (
    <div className={styles.navBarWrapper}>
      <nav className={styles.bottomNav}>
        <Button
          buttonText={<><span className={"icon"}>
            <svg width="29" height="29" viewBox="0 0 29 29" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M1 14.5C1 16.2728 1.34919 18.0283 2.02763 19.6662C2.70606 21.3041 3.70047 22.7923 4.95406 24.0459C6.20765 25.2995 7.69588 26.2939 9.33377 26.9724C10.9717 27.6508 12.7272 28 14.5 28C16.2728 28 18.0283 27.6508 19.6662 26.9724C21.3041 26.2939 22.7923 25.2995 24.0459 24.0459C25.2995 22.7923 26.2939 21.3041 26.9724 19.6662C27.6508 18.0283 28 16.2728 28 14.5C28 12.7272 27.6508 10.9717 26.9724 9.33377C26.2939 7.69588 25.2995 6.20765 24.0459 4.95406C22.7923 3.70047 21.3041 2.70607 19.6662 2.02763C18.0283 1.34919 16.2728 1 14.5 1C12.7272 1 10.9717 1.34919 9.33377 2.02763C7.69588 2.70607 6.20765 3.70047 4.95406 4.95406C3.70047 6.20765 2.70606 7.69588 2.02763 9.33377C1.34919 10.9717 1 12.7272 1 14.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M10.0801 10.0806C11.2522 8.90848 12.8419 8.25 14.4995 8.25C15.1899 8.25 15.7495 7.69036 15.7495 7C15.7495 6.30964 15.1899 5.75 14.4995 5.75C12.1789 5.75 9.95327 6.67187 8.31233 8.31282C6.67138 9.95376 5.74951 12.1794 5.74951 14.5C5.74951 15.1904 6.30916 15.75 6.99951 15.75C7.68987 15.75 8.24951 15.1904 8.24951 14.5C8.24951 12.8424 8.90799 11.2527 10.0801 10.0806ZM14.4995 11.75C13.7702 11.75 13.0707 12.0397 12.555 12.5555C12.0392 13.0712 11.7495 13.7707 11.7495 14.5C11.7495 15.2293 12.0392 15.9288 12.555 16.4445C13.0707 16.9603 13.7702 17.25 14.4995 17.25C15.2289 17.25 15.9283 16.9603 16.4441 16.4445C16.9598 15.9288 17.2495 15.2293 17.2495 14.5C17.2495 13.7707 16.9598 13.0712 16.4441 12.5555C15.9283 12.0397 15.2289 11.75 14.4995 11.75ZM23.2495 14.5C23.2495 13.8096 22.6899 13.25 21.9995 13.25C21.3092 13.25 20.7495 13.8096 20.7495 14.5C20.7495 16.1576 20.091 17.7473 18.9189 18.9194C17.7468 20.0915 16.1571 20.75 14.4995 20.75C13.8092 20.75 13.2495 21.3096 13.2495 22C13.2495 22.6904 13.8092 23.25 14.4995 23.25C16.8202 23.25 19.0458 22.3281 20.6867 20.6872C22.3276 19.0462 23.2495 16.8206 23.2495 14.5ZM14.4997 15.8064C15.2213 15.8064 15.8062 15.2215 15.8062 14.5C15.8062 13.7784 15.2213 13.1935 14.4997 13.1935C13.7782 13.1935 13.1933 13.7784 13.1933 14.5C13.1933 15.2215 13.7782 15.8064 14.4997 15.8064Z" fill="currentColor"/>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M14.5001 19.2432C17.1197 19.2432 19.2433 17.1196 19.2433 14.5C19.2433 11.8803 17.1197 9.75671 14.5001 9.75671C11.8805 9.75671 9.75684 11.8803 9.75684 14.5C9.75684 17.1196 11.8805 19.2432 14.5001 19.2432ZM14.5001 15.2905C14.9367 15.2905 15.2906 14.9366 15.2906 14.4999C15.2906 14.0633 14.9367 13.7094 14.5001 13.7094C14.0635 13.7094 13.7096 14.0633 13.7096 14.4999C13.7096 14.9366 14.0635 15.2905 14.5001 15.2905Z" fill="currentColor"/>
            </svg>
          </span><div className={"label"}>Home</div></>}
          onClick={() => handleNav('home', '/homepage')}
          type={active === 'home' ? 'nav_active' : 'nav'}
          className={styles.navBtn}
        />
        <Button
          buttonText={<><span className={"icon"}>
            <svg width="37" height="37" viewBox="0 0 37 37" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M18.093 3.0155C26.4202 3.0155 33.1703 9.76563 33.1703 18.0928C33.1703 26.4201 26.4202 33.1702 18.093 33.1702C15.6866 33.1735 13.3147 32.5985 11.177 31.4936L5.40841 33.1023C5.08657 33.1921 4.74664 33.1948 4.42344 33.11C4.10025 33.0252 3.80541 32.856 3.56914 32.6197C3.33287 32.3834 3.16366 32.0886 3.07885 31.7654C2.99404 31.4422 2.99668 31.1023 3.0865 30.7804L4.69676 25.0163C3.58911 22.8768 3.01251 20.5021 3.01564 18.0928C3.01564 9.76563 9.76576 3.0155 18.093 3.0155ZM18.093 5.2771C14.694 5.2771 11.4343 6.62733 9.03088 9.03075C6.62746 11.4342 5.27724 14.6939 5.27724 18.0928C5.27724 20.3092 5.83962 22.4396 6.89504 24.3303L7.1212 24.7374L5.4446 30.7442L11.4559 29.0676L11.863 29.2938C13.5734 30.2447 15.4788 30.7913 17.4331 30.8917C19.3875 30.9921 21.3388 30.6436 23.1376 29.8729C24.9364 29.1022 26.5348 27.9299 27.8102 26.4457C29.0857 24.9615 30.0043 23.205 30.4957 21.3108C30.987 19.4165 31.0381 17.4349 30.6449 15.5179C30.2517 13.6009 29.4248 11.7994 28.2274 10.2515C27.0301 8.70365 25.4942 7.45053 23.7374 6.58826C21.9807 5.726 20.0499 5.27748 18.093 5.2771ZM13.1928 19.6006H19.9746C20.2611 19.6007 20.5369 19.7095 20.7463 19.9051C20.9556 20.1007 21.0829 20.3685 21.1025 20.6543C21.122 20.9401 21.0323 21.2227 20.8515 21.445C20.6707 21.6672 20.4122 21.8126 20.1284 21.8516L19.9746 21.8622H13.1928C12.9063 21.8621 12.6305 21.7532 12.4212 21.5577C12.2118 21.3621 12.0845 21.0943 12.065 20.8084C12.0455 20.5226 12.1352 20.24 12.316 20.0178C12.4968 19.7955 12.7552 19.6502 13.0391 19.6111L13.1928 19.6006ZM13.1928 14.3235H23.0006C23.287 14.324 23.5626 14.4331 23.7716 14.6288C23.9807 14.8245 24.1077 15.0923 24.127 15.378C24.1464 15.6637 24.0566 15.9461 23.8758 16.1682C23.695 16.3903 23.4366 16.5355 23.1529 16.5746L23.0006 16.5851H13.1928C12.9063 16.585 12.6305 16.4762 12.4212 16.2806C12.2118 16.085 12.0845 15.8172 12.065 15.5314C12.0455 15.2455 12.1352 14.9629 12.316 14.7407C12.4968 14.5184 12.7552 14.3731 13.0391 14.3341L13.1928 14.3235Z" fill="currentColor"/>
            </svg>
          </span><div className={"label"}>Chat</div></>}
          onClick={() => handleNav('chat', '/chat')}
          type={active === 'chat' ? 'nav_active' : 'nav'}
          className={styles.navBtn}
        />
        <Button
          buttonText={<><span className={"icon"}>
            <svg width="39" height="39" viewBox="0 0 39 39" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M19.4845 34.0979C17.4668 34.0979 15.5692 33.7136 13.7918 32.9451C12.0143 32.1754 10.468 31.133 9.15282 29.8178C7.83653 28.5015 6.79411 26.9547 6.02555 25.1772C5.25591 23.3998 4.87109 21.5022 4.87109 19.4845C4.87109 17.4668 5.25537 15.5692 6.02393 13.7918C6.79249 12.0143 7.83545 10.468 9.15282 9.15282C10.4702 7.83761 12.0165 6.79465 13.7918 6.02393C15.5703 5.25537 17.4678 4.87109 19.4845 4.87109C23.2688 4.87109 26.5336 6.11973 29.2787 8.617C32.0239 11.1143 33.5951 14.1988 33.9924 17.8705H32.3492C32.0645 15.5205 31.2158 13.4113 29.8032 11.5429C28.3906 9.67457 26.5747 8.29604 24.3556 7.40733V8.11852C24.3556 9.01156 24.0379 9.77633 23.4025 10.4128C22.7671 11.0493 22.0023 11.367 21.1082 11.3659H17.8608V14.6134C17.8608 15.0734 17.7049 15.4593 17.3932 15.7711C17.0814 16.0828 16.696 16.2382 16.2371 16.2371H12.9897V19.4845H15.987V24.3556H14.6134L6.81955 16.5618C6.73836 17.0489 6.66421 17.536 6.5971 18.0232C6.52999 18.5103 6.49589 18.9974 6.49481 19.4845C6.49481 23.0296 7.73965 26.0741 10.2293 28.6179C12.719 31.1617 15.8041 32.4471 19.4845 32.4742V34.0979ZM34.1352 33.6595L28.5334 28.1226C28.0485 28.4679 27.5229 28.7386 26.9568 28.9345C26.3907 29.1293 25.7942 29.2268 25.1675 29.2268C23.5752 29.2268 22.2302 28.6779 21.1326 27.5803C20.0339 26.4805 19.4845 25.135 19.4845 23.5438C19.4845 21.9525 20.0339 20.6076 21.1326 19.5089C22.2313 18.4101 23.5762 17.8608 25.1675 17.8608C26.7587 17.8608 28.1042 18.4101 29.204 19.5089C30.3038 20.6076 30.8526 21.9525 30.8505 23.5438C30.8505 24.1911 30.7476 24.8027 30.542 25.3786C30.3363 25.9555 30.0494 26.4865 29.6814 26.9714L35.2832 32.5115L34.1352 33.6595ZM25.1675 27.6031C26.3041 27.6031 27.2648 27.2107 28.0496 26.4259C28.8344 25.6411 29.2268 24.6804 29.2268 23.5438C29.2268 22.4072 28.8344 21.4465 28.0496 20.6617C27.2648 19.8769 26.3041 19.4845 25.1675 19.4845C24.0309 19.4845 23.0702 19.8769 22.2854 20.6617C21.5006 21.4465 21.1082 22.4072 21.1082 23.5438C21.1082 24.6804 21.5006 25.6411 22.2854 26.4259C23.0702 27.2107 24.0309 27.6031 25.1675 27.6031Z" fill="currentColor"/>
            </svg>
          </span><div className={"label"}>Explore</div></>}
          onClick={() => handleNav('explore', '/explore')}
          type={active === 'explore' ? 'nav_active' : 'nav'}
          className={styles.navBtn}
        />
        <Button
          buttonText={<><span className={"icon"}>
            <svg width="41" height="54" viewBox="0 0 41 54" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M1.56941 50.1443V41.0443H5.27441C5.76841 41.0443 6.21474 41.17 6.61341 41.4213C7.02074 41.664 7.34574 41.9976 7.58841 42.4223C7.83108 42.847 7.95241 43.3193 7.95241 43.8393C7.95241 44.3593 7.83108 44.8316 7.58841 45.2563C7.34574 45.681 7.02074 46.0233 6.61341 46.2833C6.21474 46.5346 5.76841 46.6603 5.27441 46.6603H2.97341V50.1443H1.56941ZM2.97341 45.3083H5.24841C5.48241 45.3083 5.69474 45.2433 5.88541 45.1133C6.07608 44.9746 6.22774 44.797 6.34041 44.5803C6.46174 44.355 6.52241 44.108 6.52241 43.8393C6.52241 43.5706 6.46174 43.328 6.34041 43.1113C6.22774 42.8946 6.07608 42.7213 5.88541 42.5913C5.69474 42.4613 5.48241 42.3963 5.24841 42.3963H2.97341V45.3083ZM9.47067 50.1443V43.3193H10.8227V45.4643L10.6927 44.9443C10.788 44.615 10.9483 44.316 11.1737 44.0473C11.4077 43.7786 11.672 43.5663 11.9667 43.4103C12.27 43.2543 12.582 43.1763 12.9027 43.1763C13.05 43.1763 13.1887 43.1893 13.3187 43.2153C13.4573 43.2413 13.5657 43.2716 13.6437 43.3063L13.2927 44.7623C13.1887 44.719 13.0717 44.6843 12.9417 44.6583C12.8203 44.6236 12.699 44.6063 12.5777 44.6063C12.3437 44.6063 12.1183 44.654 11.9017 44.7493C11.6937 44.836 11.5073 44.9616 11.3427 45.1263C11.1867 45.2823 11.061 45.4686 10.9657 45.6853C10.8703 45.8933 10.8227 46.123 10.8227 46.3743V50.1443H9.47067ZM17.4898 50.2743C16.8225 50.2743 16.2245 50.1226 15.6958 49.8193C15.1758 49.5073 14.7642 49.087 14.4608 48.5583C14.1575 48.021 14.0058 47.41 14.0058 46.7253C14.0058 46.0406 14.1575 45.434 14.4608 44.9053C14.7642 44.368 15.1758 43.9476 15.6958 43.6443C16.2245 43.3323 16.8225 43.1763 17.4898 43.1763C18.1485 43.1763 18.7378 43.3323 19.2578 43.6443C19.7865 43.9476 20.2025 44.368 20.5058 44.9053C20.8092 45.434 20.9608 46.0406 20.9608 46.7253C20.9608 47.41 20.8092 48.021 20.5058 48.5583C20.2025 49.087 19.7865 49.5073 19.2578 49.8193C18.7378 50.1226 18.1485 50.2743 17.4898 50.2743ZM17.4898 49.0523C17.8972 49.0523 18.2612 48.9526 18.5818 48.7533C18.9025 48.5453 19.1538 48.268 19.3358 47.9213C19.5178 47.566 19.6045 47.1673 19.5958 46.7253C19.6045 46.2746 19.5178 45.876 19.3358 45.5293C19.1538 45.174 18.9025 44.8966 18.5818 44.6973C18.2612 44.498 17.8972 44.3983 17.4898 44.3983C17.0825 44.3983 16.7142 44.5023 16.3848 44.7103C16.0642 44.9096 15.8128 45.187 15.6308 45.5423C15.4488 45.889 15.3622 46.2833 15.3708 46.7253C15.3622 47.1673 15.4488 47.566 15.6308 47.9213C15.8128 48.268 16.0642 48.5453 16.3848 48.7533C16.7142 48.9526 17.0825 49.0523 17.4898 49.0523ZM22.907 50.1443V42.5523C22.907 42.1623 22.9936 41.8156 23.167 41.5123C23.3403 41.209 23.5786 40.9706 23.882 40.7973C24.1853 40.624 24.5363 40.5373 24.935 40.5373C25.2123 40.5373 25.4723 40.5893 25.715 40.6933C25.9576 40.7973 26.1526 40.936 26.3 41.1093L25.845 42.1363C25.7323 42.0323 25.6066 41.95 25.468 41.8893C25.338 41.82 25.2123 41.7853 25.091 41.7853C24.909 41.7853 24.753 41.8156 24.623 41.8763C24.5016 41.9283 24.4106 42.015 24.35 42.1363C24.2893 42.249 24.259 42.3876 24.259 42.5523V50.1443H23.583C23.4703 50.1443 23.3576 50.1443 23.245 50.1443C23.1323 50.1443 23.0196 50.1443 22.907 50.1443ZM21.815 44.6713V43.4363H25.871V44.6713H21.815ZM27.496 50.1443V43.3193H28.835V50.1443H27.496ZM28.146 41.8113C27.86 41.8113 27.639 41.7376 27.483 41.5903C27.327 41.443 27.249 41.235 27.249 40.9663C27.249 40.715 27.327 40.5113 27.483 40.3553C27.6476 40.1993 27.8686 40.1213 28.146 40.1213C28.432 40.1213 28.653 40.195 28.809 40.3423C28.965 40.4896 29.043 40.6976 29.043 40.9663C29.043 41.2176 28.9606 41.4213 28.796 41.5773C28.64 41.7333 28.4233 41.8113 28.146 41.8113ZM30.9137 50.1443V40.5243H32.2527V50.1443H30.9137ZM37.2084 50.2743C36.5064 50.2743 35.8824 50.127 35.3364 49.8323C34.7991 49.529 34.3744 49.1173 34.0624 48.5973C33.7591 48.0773 33.6074 47.4793 33.6074 46.8033C33.6074 46.266 33.6941 45.7763 33.8674 45.3343C34.0407 44.8923 34.2791 44.511 34.5824 44.1903C34.8944 43.861 35.2627 43.6096 35.6874 43.4363C36.1207 43.2543 36.5887 43.1633 37.0914 43.1633C37.5334 43.1633 37.9451 43.25 38.3264 43.4233C38.7077 43.588 39.0371 43.8176 39.3144 44.1123C39.6004 44.407 39.8171 44.758 39.9644 45.1653C40.1204 45.564 40.1941 46.0016 40.1854 46.4783L40.1724 47.0503H34.5954L34.2964 45.9843H39.0154L38.8204 46.2053V45.8933C38.7944 45.6073 38.6991 45.3516 38.5344 45.1263C38.3697 44.901 38.1617 44.7233 37.9104 44.5933C37.6591 44.4633 37.3861 44.3983 37.0914 44.3983C36.6234 44.3983 36.2291 44.4893 35.9084 44.6713C35.5877 44.8446 35.3451 45.1046 35.1804 45.4513C35.0157 45.7893 34.9334 46.2096 34.9334 46.7123C34.9334 47.189 35.0331 47.605 35.2324 47.9603C35.4317 48.307 35.7134 48.5756 36.0774 48.7663C36.4414 48.957 36.8617 49.0523 37.3384 49.0523C37.6764 49.0523 37.9884 48.996 38.2744 48.8833C38.5691 48.7706 38.8854 48.567 39.2234 48.2723L39.8994 49.2213C39.6914 49.4293 39.4357 49.6113 39.1324 49.7673C38.8377 49.9233 38.5214 50.049 38.1834 50.1443C37.8541 50.231 37.5291 50.2743 37.2084 50.2743Z" fill="currentColor"/>
            </svg>
          </span><div className={"label"}>Profile</div></>}
          onClick={() => handleNav('profile', '/profile')}
          type={active === 'profile' ? 'nav_active' : 'nav'}
          className={styles.navBtn}
        />
      </nav>
    </div>
  );
}
